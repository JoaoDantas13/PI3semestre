/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.lojapereirao.view;

import com.mycompany.lojapereirao.controller.ProdutoController;
import java.awt.Color;
import java.text.ParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author Eduardo
 */
public class CadastroProduto extends javax.swing.JFrame {

    String modoTela = "Criar";
    int codproduto = 0;
    
    
    /**
     * Creates new form CadastroProduto
     */
    public CadastroProduto() {
        
        initComponents();
        
    }
    
    public CadastroProduto(int codprod){
        
        modoTela = "Busca";
        initComponents();
        preencherProduto(codprod);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboUnidadeMedida = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtQtdCaixa = new javax.swing.JTextField();
        txtSaldo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblCodigoProduto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Produto");

        jLabel1.setText("Nome:");

        jLabel2.setText("Unidade de medida:");

        jLabel3.setText("Quantidade por caixa:");

        cboUnidadeMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "UND", "KG", "LT" }));

        jLabel5.setText("Saldo:");

        jLabel6.setText("Valor:");

        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtValor))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtSaldo))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboUnidadeMedida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtQtdCaixa))))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtQtdCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboUnidadeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dados Básicos", jPanel1);

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel4.setText("Código do Produto:");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Incluir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Alterar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setText("Excluir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem4.setText("Cancelar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIncluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar)
                        .addGap(78, 78, 78)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(32, 32, 32)
                .addComponent(lblCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnCancelar, btnExcluir, btnIncluir, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lblCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnCancelar)
                    .addComponent(jButton1))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            ConsultaProduto consultaProd = new ConsultaProduto();
            consultaProd.setVisible(true);
            dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        String texto = "";
        int g=0;
               
        if(txtNomeProduto.getText().isEmpty()){
            txtNomeProduto.setBackground(Color.red);
            texto += "\n-Nome não inserido";
            g++;
        } else {
            txtNomeProduto.setBackground(Color.white);
        }
        
        if(txtQtdCaixa.getText().isEmpty()){
            txtQtdCaixa.setBackground(Color.red);
            texto += "\n-Quantidade por caixa não inserido";
            g++;
        } else {
            txtQtdCaixa.setBackground(Color.white);
            
            try{
                int qtdcaixa = Integer.parseInt(txtQtdCaixa.getText());
                txtQtdCaixa.setBackground(Color.white);
            } catch(Exception e){
                txtQtdCaixa.setBackground(Color.red);
                texto += "\n-Quantidade por caixa inválido";
                g++;
            } 
        }
        
        if(cboUnidadeMedida.getSelectedIndex()==0){
            cboUnidadeMedida.setBackground(Color.red);
            texto += "\n-Unidade de medida não inserida";
            g++;
        } else {
            cboUnidadeMedida.setBackground(Color.white);
        }        

        if(txtSaldo.getText().isEmpty()){
            txtSaldo.setBackground(Color.red);
            texto += "\n-Saldo não inserido";
            g++;
        } else {
            txtSaldo.setBackground(Color.white);
            
            try{
                int saldo = Integer.parseInt(txtSaldo.getText());
                txtSaldo.setBackground(Color.white);
            } catch(Exception e){
                txtSaldo.setBackground(Color.red);
                texto += "\n-Saldo inválido";
                g++;
            }
        }
        
        if(txtValor.getText().isEmpty()){
            txtValor.setBackground(Color.red);
            texto += "\n-Valor não inserido";
            g++;
        } else {
            txtValor.setBackground(Color.white);
            
            try{
                double valor = Double.valueOf(txtValor.getText());
                txtValor.setBackground(Color.white);
            } catch(Exception e){
                txtValor.setBackground(Color.red);
                texto += "\n-Valor inválido";
                g++;
            }
        }
        
        if(g>0){
            JOptionPane.showMessageDialog(this, texto, "Aviso", JOptionPane.WARNING_MESSAGE);
        } else if(!lblCodigoProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Este item já foi cadastrado", "Aviso", JOptionPane.WARNING_MESSAGE);            
        }else {
            
            //Converto o valor digitado no número da nota para Inteiro
            String nome = this.txtNomeProduto.getText();
            int qtdCaixa = Integer.parseInt(this.txtQtdCaixa.getText());
            String undMedida = String.valueOf(this.cboUnidadeMedida.getSelectedItem());
            int saldo = Integer.parseInt(this.txtSaldo.getText());
            double valor = Double.parseDouble(this.txtValor.getText());

        
            //Utilizo o controller para fazer o elo entre as informações digitadas na tela com o banco de dados
            boolean retorno = ProdutoController.Salvar(nome,qtdCaixa,undMedida,saldo,valor);
            if(retorno==true){
                JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!", "Cadastro realizado",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha no cadastro do Produtol!","Falha",JOptionPane.ERROR_MESSAGE);
            }
 
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }
               
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        String texto = "";
        int g=0;
               
        if(txtNomeProduto.getText().isEmpty()){
            txtNomeProduto.setBackground(Color.red);
            texto += "\n-Nome não inserido";
            g++;
        } else {
            txtNomeProduto.setBackground(Color.white);
        }
        
        if(txtQtdCaixa.getText().isEmpty()){
            txtQtdCaixa.setBackground(Color.red);
            texto += "\n-Quantidade por caixa não inserido";
            g++;
        } else {
            txtQtdCaixa.setBackground(Color.white);
            
            try{
                int qtdcaixa = Integer.parseInt(txtQtdCaixa.getText());
                txtQtdCaixa.setBackground(Color.white);
            } catch(Exception e){
                txtQtdCaixa.setBackground(Color.red);
                texto += "\n-Quantidade por caixa inválido";
                g++;
            } 
        }
        
        if(cboUnidadeMedida.getSelectedIndex()==0){
            cboUnidadeMedida.setBackground(Color.red);
            texto += "\n-Unidade de medida não inserida";
            g++;
        } else {
            cboUnidadeMedida.setBackground(Color.white);
        }        

        if(txtSaldo.getText().isEmpty()){
            txtSaldo.setBackground(Color.red);
            texto += "\n-Saldo não inserido";
            g++;
        } else {
            txtSaldo.setBackground(Color.white);
            
            try{
                int saldo = Integer.parseInt(txtSaldo.getText());
                txtSaldo.setBackground(Color.white);
            } catch(Exception e){
                txtSaldo.setBackground(Color.red);
                texto += "\n-Saldo inválido";
                g++;
            }
        }
        
        if(g>0){
        JOptionPane.showMessageDialog(this, texto, "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            
            //Converto o valor digitado no número da nota para Inteiro
            String nome = this.txtNomeProduto.getText();
            int qtdCaixa = Integer.parseInt(this.txtQtdCaixa.getText());
            String undMedida = String.valueOf(this.cboUnidadeMedida.getSelectedItem());
            int saldo = Integer.parseInt(this.txtSaldo.getText());
            double valor = Double.parseDouble(this.txtValor.getText());
            int codprod = Integer.parseInt(this.lblCodigoProduto.getText());

        
            //Utilizo o controller para fazer o elo entre as informações digitadas na tela com o banco de dados
            boolean retorno = ProdutoController.Alterar(nome,qtdCaixa,undMedida,saldo,valor,codprod);
            if(retorno==true){
                JOptionPane.showMessageDialog(null, "Alteração Concluída com Sucesso!", "Alteração Concluída", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha na alteração do Produto!","Falha",JOptionPane.ERROR_MESSAGE);
            }
        
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }   
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        int codProd = Integer.parseInt(lblCodigoProduto.getText());

        if(lblCodigoProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Nenhum Cadastro Selecionado", "Erro", JOptionPane.WARNING_MESSAGE);
        } else{
            
            boolean retorno = ProdutoController.Excluir(codProd);
            if(retorno==true){
                JOptionPane.showMessageDialog(this, "Exclusão Concluida com Sucesso!", "Exclusão Concluída", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha na exclusão do Produto!","Falha",JOptionPane.ERROR_MESSAGE);
            }    
            
        
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
                String texto = "";
        int g=0;
               
        if(txtNomeProduto.getText().isEmpty()){
            txtNomeProduto.setBackground(Color.red);
            texto += "\n-Nome não inserido";
            g++;
        } else {
            txtNomeProduto.setBackground(Color.white);
        }
        
        if(txtQtdCaixa.getText().isEmpty()){
            txtQtdCaixa.setBackground(Color.red);
            texto += "\n-Quantidade por caixa não inserido";
            g++;
        } else {
            txtQtdCaixa.setBackground(Color.white);
            
            try{
                int qtdcaixa = Integer.parseInt(txtQtdCaixa.getText());
                txtQtdCaixa.setBackground(Color.white);
            } catch(Exception e){
                txtQtdCaixa.setBackground(Color.red);
                texto += "\n-Quantidade por caixa inválido";
                g++;
            } 
        }
        
        if(cboUnidadeMedida.getSelectedIndex()==0){
            cboUnidadeMedida.setBackground(Color.red);
            texto += "\n-Unidade de medida não inserida";
            g++;
        } else {
            cboUnidadeMedida.setBackground(Color.white);
        }        

        if(txtSaldo.getText().isEmpty()){
            txtSaldo.setBackground(Color.red);
            texto += "\n-Saldo não inserido";
            g++;
        } else {
            txtSaldo.setBackground(Color.white);
            
            try{
                int saldo = Integer.parseInt(txtSaldo.getText());
                txtSaldo.setBackground(Color.white);
            } catch(Exception e){
                txtSaldo.setBackground(Color.red);
                texto += "\n-Saldo inválido";
                g++;
            }
        }
        
        if(txtValor.getText().isEmpty()){
            txtValor.setBackground(Color.red);
            texto += "\n-Valor não inserido";
            g++;
        } else {
            txtValor.setBackground(Color.white);
            
            try{
                double valor = Double.valueOf(txtValor.getText());
                txtValor.setBackground(Color.white);
            } catch(Exception e){
                txtValor.setBackground(Color.red);
                texto += "\n-Valor inválido";
                g++;
            }
        }
        
        if(g>0){
            JOptionPane.showMessageDialog(this, texto, "Aviso", JOptionPane.WARNING_MESSAGE);
        } else if(!lblCodigoProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Este item já foi cadastrado", "Aviso", JOptionPane.WARNING_MESSAGE);            
        }else {
            
            //Converto o valor digitado no número da nota para Inteiro
            String nome = this.txtNomeProduto.getText();
            int qtdCaixa = Integer.parseInt(this.txtQtdCaixa.getText());
            String undMedida = String.valueOf(this.cboUnidadeMedida.getSelectedItem());
            int saldo = Integer.parseInt(this.txtSaldo.getText());
            double valor = Double.parseDouble(this.txtValor.getText());

        
            //Utilizo o controller para fazer o elo entre as informações digitadas na tela com o banco de dados
            boolean retorno = ProdutoController.Salvar(nome,qtdCaixa,undMedida,saldo,valor);
            if(retorno==true){
                JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!", "Cadastro realizado",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha no cadastro do Produtol!","Falha",JOptionPane.ERROR_MESSAGE);
            }
 
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String texto = "";
        int g=0;
               
        if(txtNomeProduto.getText().isEmpty()){
            txtNomeProduto.setBackground(Color.red);
            texto += "\n-Nome não inserido";
            g++;
        } else {
            txtNomeProduto.setBackground(Color.white);
        }
        
        if(txtQtdCaixa.getText().isEmpty()){
            txtQtdCaixa.setBackground(Color.red);
            texto += "\n-Quantidade por caixa não inserido";
            g++;
        } else {
            txtQtdCaixa.setBackground(Color.white);
            
            try{
                int qtdcaixa = Integer.parseInt(txtQtdCaixa.getText());
                txtQtdCaixa.setBackground(Color.white);
            } catch(Exception e){
                txtQtdCaixa.setBackground(Color.red);
                texto += "\n-Quantidade por caixa inválido";
                g++;
            } 
        }
        
        if(cboUnidadeMedida.getSelectedIndex()==0){
            cboUnidadeMedida.setBackground(Color.red);
            texto += "\n-Unidade de medida não inserida";
            g++;
        } else {
            cboUnidadeMedida.setBackground(Color.white);
        }        

        if(txtSaldo.getText().isEmpty()){
            txtSaldo.setBackground(Color.red);
            texto += "\n-Saldo não inserido";
            g++;
        } else {
            txtSaldo.setBackground(Color.white);
            
            try{
                int saldo = Integer.parseInt(txtSaldo.getText());
                txtSaldo.setBackground(Color.white);
            } catch(Exception e){
                txtSaldo.setBackground(Color.red);
                texto += "\n-Saldo inválido";
                g++;
            }
        }
        
        if(g>0){
        JOptionPane.showMessageDialog(this, texto, "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            
            //Converto o valor digitado no número da nota para Inteiro
            String nome = this.txtNomeProduto.getText();
            int qtdCaixa = Integer.parseInt(this.txtQtdCaixa.getText());
            String undMedida = String.valueOf(this.cboUnidadeMedida.getSelectedItem());
            int saldo = Integer.parseInt(this.txtSaldo.getText());
            double valor = Double.parseDouble(this.txtValor.getText());
            int codprod = Integer.parseInt(this.lblCodigoProduto.getText());

        
            //Utilizo o controller para fazer o elo entre as informações digitadas na tela com o banco de dados
            boolean retorno = ProdutoController.Alterar(nome,qtdCaixa,undMedida,saldo,valor,codprod);
            if(retorno==true){
                JOptionPane.showMessageDialog(null, "Alteração Concluída com Sucesso!", "Alteração Concluída", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha na alteração do Produto!","Falha",JOptionPane.ERROR_MESSAGE);
            }
        
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }   
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        int codProd = Integer.parseInt(lblCodigoProduto.getText());

        if(lblCodigoProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Nenhum Cadastro Selecionado", "Erro", JOptionPane.WARNING_MESSAGE);
        } else{
            
            boolean retorno = ProdutoController.Excluir(codProd);
            if(retorno==true){
                JOptionPane.showMessageDialog(this, "Exclusão Concluida com Sucesso!", "Exclusão Concluída", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha na exclusão do Produto!","Falha",JOptionPane.ERROR_MESSAGE);
            }    
            
        
        txtNomeProduto.setText("");
        txtQtdCaixa.setText("");
        cboUnidadeMedida.setSelectedIndex(0);
        txtSaldo.setText("");
        txtValor.setText("");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JComboBox<String> cboUnidadeMedida;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCodigoProduto;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtQtdCaixa;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

private void preencherProduto(int codprod){
    
   String[] retorno = ProdutoController.consultarPorID(codprod);
   lblCodigoProduto.setText(retorno[0]);
   txtNomeProduto.setText(retorno[1]);
   txtQtdCaixa.setText(retorno[2]);
   cboUnidadeMedida.setSelectedItem(retorno[3]);
   txtSaldo.setText(retorno[4]);
   txtValor.setText(retorno[5]);
}

}